CREATE QUERY max_BFS_depth(VERTEX source, SET<STRING> e_type) RETURNS (INT){ 
	OrAccum @visited;
	INT depth=-1;
  start = {source};
	WHILE start.size() > 0 DO
	  depth = depth + 1;
	  start = SELECT t
	          FROM start:s -(e_type:e) ->:t 
	          WHERE NOT t.@visited
	          ACCUM t.@visited = TRUE;
	END;
	RETURN depth;
}



CREATE QUERY estimate_diameter(SET<STRING> v_type, SET<STRING> e_type, INT seed_set_length, BOOL print_accum = TRUE, STRING file_path = "", BOOL display = FALSE) {
        MaxAccum<INT> @@diameter;
        FILE f("/tmp/fake");
  
        start = {v_type};
        start = SELECT s
                FROM start:s
                LIMIT seed_set_length;
  
        IF display THEN
          	PRINT start;
        END;
  
        start = SELECT s
                FROM start:s
                ACCUM @@diameter += max_BFS_depth(s, e_type);
        
        IF print_accum THEN
          PRINT @@diameter as diameter;
        END;
  
        IF file_path != "" THEN
          f.println("Diameter");
          f.println(@@diameter);
        END;
}
